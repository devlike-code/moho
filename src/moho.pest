WHITESPACE = _{ " " | "\t" | "\r" | "\n" }

identifier = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_" | ":")* }

bool = { "true" | "false" }

char = @{ "'" ~ ( (!"'" ~ ANY) )* ~ "'" }
string = @{ "\"" ~ ( (!"\"" ~ ANY) )* ~ "\"" }

any_digit = _{ '0'..'9' }
non_zero_digit = _{ '1'..'9' }
integer = { non_zero_digit ~ (any_digit | "_")* | "0" }

plus  = { "+" }
minus = { "-" }
exp   = { ^"e" ~ (plus | minus)? ~ integer }
float = { integer ~ "." ~ integer? ~ exp? | integer ~ exp }

value = {
    "nullptr" |
    char |
    bool |
    float |
    string |
    integer
}

meta = {
    "#"
}

property = {
    meta? ~ identifier ~ ("=" ~ value)?
}

properties = {
    "[" ~ property ~ ("," ~ property)* ~ "]"
}

inheritance = {
    identifier ~ ("," ~ identifier)*
}

name = {
    identifier
}

class = {
    properties? ~ "class" ~ name ~ (":" ~ inheritance)? ~ "{" ~ declaration* ~ "}"
}

body = _{ declaration* }

declaration = {
    properties? ~ (method_decl | field_decl | block_decl)
}

method_decl = {
    static_spec? ~ dont_care_type_decl ~ "(" ~ arguments? ~ ")" ~ ";"
}

argument = {
    properties? ~ dont_care_type_decl ~ ("=" ~ value)?
}

arguments = {
    argument ~ ("," ~ argument)*
}

static_spec = {
    "static"
}

field_decl = { 
    static_spec? ~ type_decl ~ identifier ~ ("=" ~ value)? ~ ";"
}

block_decl = {
    "{" ~ body ~ "}"
}

primitive_type = _{
    identifier
}

dbptr_spec = _{ "**" }
ptr_spec = _{ "*" }
ref_spec = _{ "&" }
array_spec = _{ "[]" }
matrix_spec = _{ "[][]" }

dbpointer_type = { identifier ~ dbptr_spec }
pointer_type = { identifier ~ ptr_spec }
reference_type = { identifier ~ ref_spec }
array_type = { identifier ~ array_spec }
matrix_type = { identifier ~ matrix_spec }

specifier = {
    dbptr_spec | ptr_spec | ref_spec | array_spec | matrix_spec
}

dont_care_type_decl = {
    (identifier | specifier)*
}

type_decl = {
    dbpointer_type |
    pointer_type |
    reference_type |
    matrix_type |
    array_type |
    primitive_type
}

moho = {
    class+
}